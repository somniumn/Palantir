<Controls:MetroWindow x:Class="Palantir.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:Views="clr-namespace:Palantir.View"
                      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:local="clr-namespace:Palantir"
                      mc:Ignorable="d"
                      Icon="Resources\CrystalBall.ico"
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      Loaded="Loaded_MetroWindow" WindowState="Maximized"
                      Title="Palantir" Height="860" Width="1400">
    <Controls:MetroWindow.TitleTemplate>
        <DataTemplate>
            <TextBlock Text="{TemplateBinding Content}"
                   TextTrimming="CharacterEllipsis"
                   VerticalAlignment="Center"
                   Margin="5"
                   FontWeight="Light"
                   FontSize="14"
                   FontFamily="Segoe UI Light" />
        </DataTemplate>
    </Controls:MetroWindow.TitleTemplate>
    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands>
            <Button x:Name="BnVersion" Content="ver. 0.1.0" />
            <Button>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="Help" />
                    <iconPacks:PackIconModern Width="16" Height="16" Kind="Question" />
                </StackPanel>
            </Button>
            <Button x:Name="BnMode" Content="manual" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>
    <Controls:MetroWindow.Resources>
        <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type Controls:HamburgerMenuIconItem}">
            <Grid Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ContentControl Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Rectangle Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill" Visual="{Binding Icon}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </ContentControl>
                <TextBlock Grid.Column="1" VerticalAlignment="Center" FontSize="16" Foreground="Black" FontFamily="Consolas" Text="{Binding Label}" />
            </Grid>
        </DataTemplate>
        <Style x:Key="HamburgerMenuCreatorsItemStyle" BasedOn="{StaticResource HamburgerMenuItemStyle}" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent" />
            <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
            <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
            <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
            <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
            <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
            <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
            <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="Transparent" />
            <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                            <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Grid Margin="{TemplateBinding BorderThickness}">
                                <Grid HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Rectangle x:Name="SelectionIndicator"
                                                   Width="{DynamicResource HamburgerMenuSelectionIndicatorThemeWidth}"
                                                   Height="{DynamicResource HamburgerMenuSelectionIndicatorThemeHeight}"
                                                   Fill="{TemplateBinding Foreground}"
                                                   Focusable="False"
                                                   Opacity="0.0" />
                                </Grid>
                                <!--<materialDesign:Ripple Padding="{TemplateBinding Padding}"
                                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                       Content="{TemplateBinding Content}"
                                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                                       ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                       Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                                       Focusable="False"
                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />-->
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                <Setter TargetName="SelectionIndicator" Property="Opacity" Value="1.0" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HamburgerMenuCreatorsStyle" BasedOn="{StaticResource {x:Type Controls:HamburgerMenu}}" TargetType="{x:Type Controls:HamburgerMenu}">
            <Setter Property="ItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
            <Setter Property="OptionsItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
            <Setter Property="PaneBackground" Value="{DynamicResource WhiteBrush}" />
            <Setter Property="PaneForeground" Value="{DynamicResource TextBrush}" />
            <Setter Property="ShowSelectionIndicator" Value="True" />
        </Style>

    </Controls:MetroWindow.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBox x:Name="TbMode" Grid.Column="0" Text="Normal" Margin="5" FontFamily="Segoe UI" IsReadOnly="True" Focusable="False" />
            <Label Grid.Column="1" Content="API Connection" VerticalContentAlignment="Center" FontFamily="Segoe UI" />
            <TextBox x:Name="TbAPIConn" Grid.Column="2" Text="ON" Margin="5" FontFamily="Segoe UI" IsReadOnly="True" Focusable="False"/>
            <Label Grid.Column="3" Content="Process State" VerticalContentAlignment="Center" FontFamily="Segoe UI"/>
            <TextBox x:Name="TbProcessState" Grid.Column="4" Text="IDLE" Margin="5" FontFamily="Segoe UI" IsReadOnly="True" Focusable="False"/>
            <Grid Grid.Column="5" Margin="5">
                <ProgressBar x:Name="PbStatus" MinWidth="100" Width="200" Minimum="0" Maximum="100" Value="{Binding InsertBindingHere}" />
                <TextBlock Text="{Binding ElementName=PbStatus, Path=Value, StringFormat={}{0:0}%}" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Grid>
            <TextBox x:Name="TbCurrentDateTime" Grid.Column="6" Text="DATE:TIME" HorizontalAlignment="Right" VerticalContentAlignment="Center" Margin="5,5,10,5" FontFamily="Segoe UI" IsReadOnly="True" Focusable="False" Foreground="RoyalBlue" FontWeight="Bold" BorderThickness="0" />-->
        </Grid>
        <Controls:HamburgerMenu x:Name="HamburgerMenuControl"
                                Grid.Row="1"
                                Foreground="White"
                                PaneBackground="#83919f"
                                IsPaneOpen="True"
                                ItemTemplate="{StaticResource MenuItemTemplate}"
                                OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                                DisplayMode="CompactInline"
                                SelectedIndex="1"
                                OpenPaneLength="120"
                                ItemInvoked="HamburgerMenuControl_ItemInvoked">
            <!-- hamburger menu -->
            <Controls:HamburgerMenu.ItemsSource>
                <Controls:HamburgerMenuItemCollection>
                    <Controls:HamburgerMenuIconItem Icon="{StaticResource appbar_base}" Label="DASH">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Views:DASHView x:Name="DASH" />
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem Icon="{StaticResource appbar_server}" Label="CASE">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Views:CASEView x:Name="CASE" />
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem Icon="{StaticResource appbar_stock_up}" Label="SIRE">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Views:SIREView x:Name="SIRE" />
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem Icon="{StaticResource appbar_monitor}" Label="MEIM">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Grid></Grid>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem Icon="{StaticResource appbar_newspaper}" Label="NEWS">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Views:NEWSView x:Name="NEWS" />
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem Icon="{StaticResource appbar_notification_star}" Label="KIND">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Views:KINDView x:Name="KIND" />
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                </Controls:HamburgerMenuItemCollection>
            </Controls:HamburgerMenu.ItemsSource>
            <!-- hamburger option menu -->
            <Controls:HamburgerMenu.OptionsItemsSource>
                <Controls:HamburgerMenuItemCollection>
                    <Controls:HamburgerMenuIconItem Icon="{StaticResource appbar_settings}" Label="CONFIG">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Grid x:Name="AboutView"></Grid>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                </Controls:HamburgerMenuItemCollection>
            </Controls:HamburgerMenu.OptionsItemsSource>
            <!-- hamburger content area -->
            <Controls:HamburgerMenu.ContentTemplate>
                <DataTemplate DataType="{x:Type Controls:HamburgerMenuItem}">
                    <Grid x:Name="TheContentGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="36" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Background="Transparent">
                            <TextBlock x:Name="Header" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                       FontSize="18" FontFamily="Segoe UI Light" Background="Transparent"
                                       Margin="20,0,20,0"
                                       Foreground="Black" Text="{Binding Label}" />
                        </Border>
                        <ContentControl x:Name="TheContent" Grid.Row="1" Focusable="False" Foreground="{DynamicResource BlackBrush}" Content="{Binding Tag}" />
                    </Grid>
                </DataTemplate>
            </Controls:HamburgerMenu.ContentTemplate>
        </Controls:HamburgerMenu>
        <!--<GridSplitter Grid.Row="1" ResizeDirection="Rows" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" 
                      BorderThickness="0,0,0,1" BorderBrush="Gray"
                      Height="4" Background="Transparent"/>-->
        <Expander Grid.Row="2" IsExpanded="False" HorizontalContentAlignment="Stretch" Header="LogView" FlowDirection="RightToLeft">
            <Expander.Content>
                <TextBox x:Name="TbLogOutput" BorderThickness="0" BorderBrush="#FFBBBBBB" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" MinHeight="100" FlowDirection="LeftToRight" />
            </Expander.Content>
        </Expander>
    </Grid>
</Controls:MetroWindow>
